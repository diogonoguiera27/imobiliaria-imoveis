import api from "./api";

/**
 * Payload para criar uma simula√ß√£o.
 * ‚ö° O backend usa userId da sess√£o, ent√£o userId aqui √© opcional
 * (s√≥ precisa se o back exigir explicitamente, caso contr√°rio pode remover).
 */
export interface CreateSimulationPayload {
  userId?: number;
  title: string;
  entry: number;
  installments: number;
  installmentValue: number;
}

/**
 * üîí Cria uma nova simula√ß√£o.
 * O backend retorna tamb√©m o uuid gerado.
 */
export async function createSimulation(data: CreateSimulationPayload) {
  const response = await api.post("/simulations", data);
  return response.data as {
    id: number;
    uuid: string | null;
    title: string;
    entry: number;
    installments: number;
    installmentValue: number;
    date: string;
    userId: number;
  };
}

/**
 * üîπ Lista simula√ß√µes de um usu√°rio.
 * Aceita **userId** (n√∫mero) ou **userUuid** (string).
 * Prefira uuid quando poss√≠vel para n√£o expor o id.
 */
export async function getSimulationsByUser(
  identifier: number | string
) {
  const response = await api.get(
    `/simulations/users/${identifier}/simulations`
  );
  return response.data as {
    id: number;
    uuid: string | null;
    title: string;
    entry: number;
    installments: number;
    installmentValue: number;
    date: string;
  }[];
}
